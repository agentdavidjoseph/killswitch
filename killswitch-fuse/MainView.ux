<App>
	<JavaScript File="js/mainview.js" />
	<Fuse.iOS.StatusBarConfig Style="Light" />

	<ClientPanel Color="ThemeBlue">
		<EdgeNavigator ux:Name="edgeNav" IsEnabled="false">

			<!-- Sidebar -->
			<Panel ux:Name="sidebar" Edge="Left" Width="100%" Margin="0,0,56,0" Background="#37474F" Opacity=".95">
				<Shadow ux:Name="shadow" Angle="180" Distance="8" Size="16" Color="#0000" />
				<StackPanel Padding="10">
					<Text Value="Logged in as:" Color="White" FontSize="12" Margin="0,0,0,10" Alignment="VerticalCenter" />
					<Text Value="{sessionName}" Color="White" FontSize="14" Alignment="VerticalCenter" />				
					<Text Value="{sessionUsername}" Color="White" FontSize="14" Alignment="VerticalCenter" />
					<TextSeparator Margin="0, 30, 0, 20" Color="#ffffff" />
					<MenuAction Text="Log out" Callback="{logOut}" NavToggle="sidebar" />
					<MenuLink Text="Change password" URL="{apiUrls.changePassword}" />
					<MenuLink Text="Delete account" URL="{apiUrls.deleteAccount}" />
					<MenuLink Text="Download PC app" URL="{apiUrls.download}" />
					<MenuLink Text="Killswitch website" URL="{apiUrls.website}" />
				</StackPanel>
				<Panel Alignment="Bottom">
					<Text Value="Killswitch v{appVersion},   Daniel Skovli Â© {currentYear}" Color="White" FontSize="12" TextAlignment="Left" Margin="10, 20, 0, 10" Alignment="Bottom" />
				</Panel>
				<ActivatingAnimation>
					<Change shadow.Color="#0004" />
					<Change sidebarFade.Opacity="1" />
					<Change mainPanel.HitTestMode="None"/>
				</ActivatingAnimation>
				<WhileActive>
					<OnBackButton>
					    <NavigateToggle Target="sidebar" />
					</OnBackButton>
				</WhileActive>
			</Panel>

			<!-- Main view -->
			<HidingPanel ux:Name="topPanel">
				<GridLayout Rows="60,1*" />
					<WhileEnabled>
						<Change navBarTrans.Y="0" Duration="0.4" />
					</WhileEnabled>

					<!-- Top row grid -->
					<Grid Columns="70,1*,70">
						<Translation ux:Name="navBarTrans" RelativeTo="Size" Y="-0.2" />

						<!-- Hamburger menu. Currently brings us back to login screen -->
						<Panel HitTestMode="LocalBoundsAndChildren">
							<Hamburger Alignment="Left">
								<Clicked>
									<NavigateToggle Target="sidebar" />
								</Clicked>
							</Hamburger>
						</Panel>

						<!-- Header text -->
						<Text Value="Killswitch" Color="White" FontSize="20" Alignment="VerticalCenter" />

						<!-- Reload button -->
						<Image ux:Name="reload" File="icons/refresh.png" Width="20" Alignment="VerticalCenter">
							<Clicked>
								<Callback Handler="{refresh}" />
							</Clicked>
							<WhileTrue Value="{apiBusy}">
								<Spin Target="reload" Frequency="2" />
							</WhileTrue>
						</Image>
					</Grid>

					<!-- Main feed -->
					<DockPanel>
						<Rectangle ux:Name="sidebarFade" Layer="Overlay" Color="#0005" Opacity="0" HitTestMode="None" />
						<HidingPanel ux:Name="mainPanel">
							<Clicked>
								<Callback Handler="{killswitchClick}" />
							</Clicked>
							<WhileTrue Value="{apiBusy}">
								<Change mainPanel.HitTestMode="None"/>
								<Change mainPanelLock.Opacity="0.2" Duration="0.2" />
								<Blur Radius="2" /> 
							</WhileTrue>
							<StackPanel ux:Name="mainPanelLock" Alignment="Top">
								<WhileTrue Value="{apiKillswitch}">
									<Image ux:Name="lockIcon" File="icons/locked_600px.png" Width="290" Margin="0, 100, 0, 0" />
									<Text Value="Tap to unlock" TextAlignment="Center" Color="White" FontSize="20" Margin="0,20,0,0" />
								</WhileTrue>
								<WhileFalse Value="{apiKillswitch}">
									<Image ux:Name="unlockIcon" File="icons/unlocked_600px.png" Width="290" Margin="0, 100, 0, 0" />
									<Text Value="Tap to lock" TextAlignment="Center" Color="White" FontSize="20" Margin="0,20,0,0" />
								</WhileFalse>
							</StackPanel>
						</HidingPanel>
					</DockPanel>
			</HidingPanel>
		</EdgeNavigator>

		<!-- Loading indicator (blank screen, spinnding gizmo) -->
		<LoadingPanel ux:Name="loadingPanel" Opacity="0" ThemeColor="#fff">
			<WhileTrue Value="{apiBusy}">
				<Change loadingPanel.Opacity="1" Duration=".1" />
			</WhileTrue>
		</LoadingPanel>

		<!-- Status text (bottom screen) -->
		<Panel ux:Name="statusOutput" Visibility="Hidden" Height="25" Padding="0, 0, 0, 20" Alignment="Bottom" Opacity="1">
			<Each Items="{statusOutputText}">
				<Text ux:Name="text" Value="{data()}" Alignment="Center" Color="#ffffff" FontSize="15">
					<AddingAnimation>
						<Move Y="30" Duration="0.3" Easing="CubicIn" />
						<Change text.Opacity="0" Duration="0.2" />
					</AddingAnimation>
					<RemovingAnimation>
						<Move Y="-30" Duration="0.3" Easing="CubicOut" />
						<Change text.Opacity="0" Duration="0.2" />
					</RemovingAnimation>
				</Text>
			</Each>
			<WhileKeyboardVisible>
				<Change statusOutput.Opacity="0" />
			</WhileKeyboardVisible>
		</Panel>

		<!-- Sign up form -->
		<HidingPanel ux:Name="signupForm" Width="90%" MaxWidth="400" Height="260" Offset="0,20">
			<!-- <Grid RowCount="3" Margin="30,40,30,70"> -->
			<StackPanel Margin="30,50,30,70" ItemSpacing="10">
				<TextInput ux:Name="signupName" ActionStyle="Next" PlaceholderText="Name" Value="{signupName}" Opacity="1" Height="40" Padding="8, 0, 8, 0" Alignment="VerticalCenter" PlaceholderColor="#888">
					<Rectangle Layer="Background" CornerRadius="2" Opacity=".4">
						<Stroke Width="1" Color="#000000" />
			    	    <SolidColor Color="White" />
			    	</Rectangle>
			    </TextInput>
				<!-- <TextSeparator /> -->
				<TextInput ux:Name="signupEmail" ActionStyle="Next" PlaceholderText="Email" Value="{signupEmail}" InputHint="Email" Opacity="1" Height="40" Padding="8, 0, 8, 0" Alignment="VerticalCenter" PlaceholderColor="#888">
				<!-- <TextSeparator /> -->
					<Rectangle Layer="Background" CornerRadius="2" Opacity=".4">
						<Stroke Width="1" Color="#000000" />
			    	    <SolidColor Color="White" />
			    	</Rectangle>
			    </TextInput>
				<TextInput ux:Name="signupPassword" ActionStyle="Default" IsPassword="true" Value="{signupPassword}" PlaceholderText="Password" Opacity="1" Height="40" Padding="8, 0, 8, 0" Alignment="VerticalCenter" PlaceholderColor="#888">
					<Rectangle Layer="Background" CornerRadius="2" Opacity=".4">
						<Stroke Width="1" Color="#000000" />
			    	    <SolidColor Color="White" />
			    	</Rectangle>
					<WhileContainsText>
						<OnKeyPress Key="Enter">
							<Callback Handler="{signup}" />
						</OnKeyPress>
					</WhileContainsText>
				</TextInput>
				<!-- <TextSeparator /> -->
			<!-- </Grid> -->
			</StackPanel>
			<WhileEnabled>
				<Change signupName.Opacity="1" Duration="0.4" />
				<Change signupEmail.Opacity="1" Duration="0.4" Delay="0.15" />
				<Change signupPassword.Opacity="1" Duration="0.4" Delay="0.3" />
				<Change loadingPanel.LayoutMaster="signupForm" />
				<GiveFocus Target="signupName" />
				
				<WhileTrue Value="{apiBusy}">
					<Change signupForm.Opacity="0.2" Duration="0.2" />
					<Change showWhiteRectSignup.Value="false" />
					<Change whiteRectSignup.Opacity="0.2" Duration="0.2" />
					<Change signupButtonOK.IsEnabled="false" />
					<Change signupButtonCancel.IsEnabled="false" />
					<Change signupButtonOK.Opacity="0.2" Duration="0.2" />
					<Change signupButtonCancel.Opacity="0.2" Duration="0.2" />
					<Blur Radius="2" />
					<!-- <Scale Factor="0" Duration=".1" /> -->
					<!-- <Change loadingPanel.Opacity="1" Duration=".1" /> -->
				</WhileTrue>
			</WhileEnabled>
			<Panel>
				<StackPanel Orientation="Horizontal" Alignment="BottomCenter" ItemSpacing="20">
					<Panel ux:Name="signupButtonOK" Width="100" Offset="0%,50%" Height="40" HitTestMode="LocalBoundsAndChildren">
						<Rectangle Color="LoginButtons" CornerRadius="8">
							<Text Value="DONE" Alignment="Center" Color="White" />
						</Rectangle>
						<Clicked>
							<Callback Handler="{signup}" />
						</Clicked>
					</Panel>
					<Panel ux:Name="signupButtonCancel" Width="100" Offset="0%,50%" Height="40" HitTestMode="LocalBoundsAndChildren">
						<Rectangle Color="LoginButtons" CornerRadius="8">
							<Text Value="CANCEL" Alignment="Center" Color="White" />
						</Rectangle>
						<Clicked>
							<Callback Handler="{changeState}" />
						</Clicked>
					</Panel>
				</StackPanel>
			</Panel>
		</HidingPanel>

		<!-- Login form -->
		<HidingPanel ux:Name="loginForm" Width="90%" MaxWidth="400" Height="200" Offset="0,35">
			<!-- <Grid RowCount="2" Margin="30,40,30,70"> -->
			<StackPanel Margin="30,45,30,70" ItemSpacing="10">
				<TextInput ux:Name="loginEmail" ActionStyle="Default" PlaceholderText="Email" Value="{loginEmail}" InputHint="Email" Opacity="1" Height="40" Padding="8, 0, 8, 0" Alignment="VerticalCenter" PlaceholderColor="#888">
					<Rectangle Layer="Background" CornerRadius="2" Opacity=".4">
						<Stroke Width="1" Color="#000000" />
			    	    <SolidColor Color="White" />
			    	</Rectangle>
		    	</TextInput>
				<!-- <TextSeparator /> -->
				<TextInput ux:Name="loginPassword" ActionStyle="Default" IsPassword="true" Value="{loginPassword}" PlaceholderText="Password" Opacity="1" Height="40" Padding="8, 0, 8, 0" Alignment="VerticalCenter" PlaceholderColor="#888">
					<Rectangle Layer="Background" CornerRadius="2" Opacity=".4">
						<Stroke Width="1" Color="#000000" />
			    	    <SolidColor Color="White" />
			    	</Rectangle>
					<WhileContainsText>
						<OnKeyPress Key="Enter">
							<Callback Handler="{login}" />
						</OnKeyPress>
					</WhileContainsText>
				</TextInput>
				<!-- <TextSeparator /> -->
			<!-- </Grid> -->
			</StackPanel>
			<WhileEnabled>
				<Change loginEmail.Opacity="1" Duration="0.4" />
				<Change loginPassword.Opacity="1" Duration="0.4" Delay="0.3" />
				<Change loadingPanel.LayoutMaster="loginForm" />
				<!-- <GiveFocus Target="loginEmail" /> -->
				
				<WhileTrue Value="{apiBusy}">
					<Change loginForm.Opacity="0.3" Duration="0.2" />
					<Change showWhiteRectLogin.Value="false" />
					<Change whiteRectLogin.Opacity="0.3" Duration="0.2" />
					<Change loginButtonOK.IsEnabled="false" />
					<Change loginButtonCancel.IsEnabled="false" />
					<Change loginButtonOK.Opacity="0.3" Duration="0.2" />
					<Change loginButtonCancel.Opacity="0.3" Duration="0.2" />
					<Blur Radius="2" />
					<!-- <Scale Factor="0" Duration=".1" /> -->
					<!-- <Change loadingPanel.Opacity="1" Duration=".1" /> -->
				</WhileTrue>
			</WhileEnabled>
			<Panel>
				<StackPanel Orientation="Horizontal" Alignment="BottomCenter" ItemSpacing="20">
					<Panel ux:Name="loginButtonOK" Width="100" Offset="0%,50%" Height="40" HitTestMode="LocalBoundsAndChildren">
						<Rectangle Color="LoginButtons" CornerRadius="8">
							<Text Value="DONE" Alignment="Center" Color="White" />
						</Rectangle>
						<Clicked>
							<Callback Handler="{login}" />
						</Clicked>
					</Panel>
					<Panel ux:Name="loginButtonCancel" Width="100" Offset="0%,50%" Height="40" HitTestMode="LocalBoundsAndChildren">
						<Rectangle Color="LoginButtons" CornerRadius="8">
							<Text Value="CANCEL" Alignment="Center" Color="White" />
						</Rectangle>
						<Clicked>
							<Callback Handler="{changeState}" />
						</Clicked>
					</Panel>
				</StackPanel>
			</Panel>
			<Panel>
				<Text ux:Name="forgotPasswordText" HitTestMode="LocalBoundsAndChildren" Value="Forgotten your password? Click here" Alignment="BottomCenter" Offset="0, 90" Color="#ffffff" FontSize="15">
					<Clicked>
						<LaunchUri Uri="{apiUrls.resetPassword}" />
					</Clicked>
				</Text>
			</Panel>
		</HidingPanel>

		<!-- Log in / sign up buttons -->
		<HidingPanel ux:Name="startPanel" Alignment="Bottom" Height="35%" Padding="15,0,15,15">
			<StackPanel ItemSpacing="20">
				<Panel ux:Name="loginButton" Width="120" Height="35" Alignment="Top" HitTestMode="LocalBounds">
					<Text Value="LOG IN" Alignment="Center" Color="#000000" HitTestMode="LocalBounds" />
					<Clicked>
						<Callback Handler="{changeState}" />
					</Clicked>
				</Panel>
				<Panel ux:Name="signupButton" Width="120" Height="35" Alignment="Top" HitTestMode="LocalBounds">
					<Text Value="SIGN UP" Alignment="Center" Color="#000000" HitTestMode="LocalBounds" />
					<Clicked>
						<Callback Handler="{changeState}" />
					</Clicked>
				</Panel>
			</StackPanel>
		</HidingPanel>

		<!-- White rectangle. Button background, and morphs into form background - DUPLICATE THIS FOR LOGIN -->
		<Rectangle ux:Name="whiteRectSignup" Color="White" LayoutMaster="signupButton" Layer="Background" CornerRadius="25" Opacity="0">
			<WhileTrue ux:Name="showWhiteRectSignup">
				<Change whiteRectSignup.Opacity="1" Duration="0.2" />
			</WhileTrue>
			<WhileTrue Value="{apiBusy}">
				<Blur Radius="3" />
			</WhileTrue>
		</Rectangle>
		<Attractor ux:Name="whiteRectSignupCornerRadiusAttractor" Target="whiteRectSignup.CornerRadius" Value="25" Type="SmoothSnap" Unit="Points" />

		<Rectangle ux:Name="whiteRectLogin" Color="White" LayoutMaster="loginButton" Layer="Background" CornerRadius="25" Opacity="0">
			<WhileTrue ux:Name="showWhiteRectLogin">
				<Change whiteRectLogin.Opacity="1" Duration="0.2" />
			</WhileTrue>
			<WhileTrue Value="{apiBusy}">
				<Blur Radius="3" />
			</WhileTrue>
		</Rectangle>
		<Attractor ux:Name="whiteRectLoginCornerRadiusAttractor" Target="whiteRectLogin.CornerRadius" Value="25" Type="SmoothSnap" Unit="Points" />

		<!-- Logo -->
		<HidingPanel ux:Name="logoPanel" Alignment="Top" Height="65%" IsEnabled="false" HitTestMode="None" Layer="Background">
			<StackPanel Alignment="Center">
				<Image ux:Name="logo" File="icons/locked_450px.png" Width="180" />
			</StackPanel>
			<WhileTrue ux:Name="moveLogo">
				<!-- <Move Target="logo" Y="-0.4" RelativeTo="Size" Duration="0.5" Delay="0.3" Easing="CubicInOut" /> -->
			</WhileTrue>

			<WhileKeyboardVisible>
				<Change logoPanel.IsEnabled="false" />
			</WhileKeyboardVisible>
		</HidingPanel>

		<!-- Switch between all our states -->
		<!-- Loading, buttons, forms, main -->
		<StateGroup ux:Name="state" Transition="Exclusive" Rest="loadingState" Active="{activeState}" >
			<State Name="loadingState">
				<Callback Handler="{changeStateCallback}" />
				<Set showWhiteRectSignup.Value="false" />
				<Change startPanel.IsEnabled="false" DelayBack="0" />
				<Set moveLogo.Value="false" />
				<Change loadingPanel.Opacity="1" Duration=".4" />
				<Change statusOutput.Visibility="Visible" />
			</State>
			<State Name="loginButtonState">
				<Change mainPanel.Opacity="0" Duration=".3" />
				<Callback Handler="{changeStateCallback}" />
				<Move Target="whiteRectSignup" RelativeTo="PositionOffset" RelativeNode="signupButton"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Resize Target="whiteRectSignup" RelativeTo="Size" RelativeNode="signupButton"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Move Target="whiteRectLogin" RelativeTo="PositionOffset" RelativeNode="loginButton"
						Vector="1" Duration="0.2" DurationBack="0" />
				<Resize Target="whiteRectLogin" RelativeTo="Size" RelativeNode="loginButton"
						Vector="1" Duration="0.2" DurationBack="0" />

				<!-- <Change loadingPanel.Opacity="0" Duration=".2" /> -->
				<Change statusOutput.Visibility="Visible" />
				<Change logoPanel.IsEnabled="true" />

				<Set whiteRectSignup.LayoutMaster="signupButton" Delay="0.2" />
				<Set whiteRectLogin.LayoutMaster="loginButton" Delay="0.2" />

				<Set whiteRectSignupCornerRadiusAttractor.Value="25" />
				<Set whiteRectLoginCornerRadiusAttractor.Value="25" />
				<Set showWhiteRectSignup.Value="true" />
				<Set showWhiteRectLogin.Value="true" />

				<Change startPanel.IsEnabled="true" DelayBack="0" />
				<Set moveLogo.Value="true" />
			</State>
			<State Name="signupFormState">
				<Callback Handler="{changeStateCallback}" />
				<Set whiteRectSignupCornerRadiusAttractor.Value="5" />
				<Move Target="whiteRectSignup" RelativeTo="PositionOffset" RelativeNode="signupForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="whiteRectSignup" RelativeTo="Size" RelativeNode="signupForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />

				<Set statusOutput.Opacity="0" />
				<Change statusOutput.Opacity="1" Duration="0.2" Delay="0.6" DelayBack="0" DurationBack="0" />
				<Move Target="statusOutput" RelativeTo="PositionOffset" RelativeNode="signupForm"
						Y="1.05" Duration="0" DurationBack="0" DelayBack="0.6" />
				
				<!-- <Move Target="statusOutput" RelativeTo="PositionOffset" RelativeNode="signupForm"
						Vector="1" Duration="1" Delay="0" Easing="CubicInOut" DurationBack="0" Y="500" /> -->
				
				<Set whiteRectSignup.LayoutMaster="signupForm" Delay="0.6" />

				<Change signupForm.IsEnabled="true" Delay="0.6" DelayBack="0" />
				<Change statusOutput.Visibility="Visible" />
				<Change whiteRectLogin.Opacity="0" Duration=".2" />
				<Set showWhiteRectSignup.Value="true" />
				<Set showWhiteRectLogin.Value="false" />
				<Set moveLogo.Value="true" />
			</State>
			<State Name="loginFormState">
				<Callback Handler="{changeStateCallback}" />
				<Set whiteRectLoginCornerRadiusAttractor.Value="5" />
				<Move Target="whiteRectLogin" RelativeTo="PositionOffset" RelativeNode="loginForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />
				<Resize Target="whiteRectLogin" RelativeTo="Size" RelativeNode="loginForm"
						Vector="1" Duration="0.4" Delay="0.2" DurationBack="0" Easing="CubicInOut" />

				<Set statusOutput.Opacity="0" />
				<Change statusOutput.Opacity="1" Duration="0.2" Delay="0.6" DelayBack="0" DurationBack="0" />
				<Move Target="statusOutput" RelativeTo="PositionOffset" RelativeNode="loginForm"
						Y="1.06" Duration="0" DurationBack="0" DelayBack="0.6" />
				
				<Set whiteRectLogin.LayoutMaster="loginForm" Delay="0.6" />

				<Change loginForm.IsEnabled="true" Delay="0.6" DelayBack="0" />
				<Change statusOutput.Visibility="Visible" />
				<Change whiteRectSignup.Opacity="0" Duration=".2" />

				<Set showWhiteRectSignup.Value="false" />
				<Set showWhiteRectLogin.Value="true" />
				<Set moveLogo.Value="true" />
			</State>
			<State Name="mainState">
				<Callback Handler="{changeStateCallback}" />
				<Move Target="whiteRectSignup" RelativeTo="PositionOffset" RelativeNode="edgeNav"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Resize Target="whiteRectSignup" RelativeTo="Size" RelativeNode="edgeNav"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Move Target="whiteRectLogin" RelativeTo="PositionOffset" RelativeNode="edgeNav"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				<Resize Target="whiteRectLogin"  RelativeTo="Size" RelativeNode="edgeNav"
						Vector="1" Duration="0.4" Delay="0.05" Easing="CubicInOut" DurationBack="0" />
				
				<Change whiteRectSignup.Color="ThemeBlue" Duration="0.6" />
				<Change whiteRectLogin.Color="ThemeBlue" Duration="0.6" />

				<Set whiteRectSignup.LayoutMaster="edgeNav" Delay="0.45" />
				<Set whiteRectLogin.LayoutMaster="edgeNav" Delay="0.45" />

				<Change whiteRectSignup.CornerRadius="0" Duration="0.2" DurationBack="0" />
				<Change whiteRectLogin.CornerRadius="0" Duration="0.2" DurationBack="0" />
				<Change logoPanel.IsEnabled="false" />
				<Set whiteRectSignupCornerRadiusAttractor.Value="0" />
				<Set whiteRectLoginCornerRadiusAttractor.Value="0" />

				<Change mainPanel.IsEnabled="true" Delay="0.5" />
				<!-- <Change mainPanel.Opacity="1" Duration=".3" Delay=".3" /> -->
				<Change topPanel.IsEnabled="true" />
				<Change edgeNav.IsEnabled="true" />

				<Set showWhiteRectSignup.Value="true" Delay="2" />
				<Set showWhiteRectLogin.Value="true" Delay="2" />
				<Change statusOutput.Visibility="Visible" />
				<!-- <Set mainPanel.Opacity="1" /> -->
			</State>
		</StateGroup>
	</ClientPanel>
</App>
